---
title: "Penguins EDA"
format:
  html:
    code-fold: true
---

## Penguin Size and Mass by Sex and Species

```{r}
library(palmerpenguins)
library(dplyr)
library(dbplyr)
library(ggplot2)
library(DBI)
library(duckdb)
library(tidyverse)
library(tidymodels)
library(discrim)
library(ISLR2)

con <- DBI::dbConnect(duckdb::duckdb(), dbdir = "my-db.duckdb")
df <- dplyr::tbl(con, "penguins")
```

```{r}
df <- palmerpenguins::penguins
```

```{r}
df %>%
  group_by(species, sex) %>%
  summarise(
    across(
        ends_with("mm") | ends_with("g"),
      \(x) mean(x, na.rm = TRUE)
      )
    ) %>%
  dplyr::collect() %>%
  knitr::kable()
```

## Penguin Size vs Mass by Species

```{r}
df %>%
  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +
  geom_point() + 
  geom_smooth(method = "lm")
```
```{r}
summary(palmerpenguins::penguins)
```
```{r}
(penguins_split <- initial_split(data = palmerpenguins::penguins, prop = 0.7, strata = species)) 
penguin_train <- training(penguins_split)
penguin_test <- testing(penguins_split)
```
```{r}
lda_spec <- discrim_linear() %>%
        set_mode("classification") %>%
        set_engine("MASS")
```
```{r}
(lda_fit<- lda_spec %>%
    fit(species ~ bill_length_mm + bill_depth_mm + flipper_length_mm + body_mass_g       , data = penguin_train))
```
```{r}
augment(lda_fit, new_data = penguin_test) %>%
  conf_mat(truth = species, estimate = .pred_class)
```
```{r}
augment(lda_fit, new_data = penguin_test) %>%
  accuracy(truth = species, estimate = .pred_class)
```
```{r}
qda_spec <- discrim_quad() %>%
        set_mode("classification") %>%
        set_engine("MASS")
```


```{r}
(qda_fit<- qda_spec %>%
   fit(species ~ bill_length_mm + bill_depth_mm + flipper_length_mm + body_mass_g       , data = penguin_train))
```
```{r}
augment(qda_fit, new_data = penguin_test) %>%
  conf_mat(truth = species, estimate = .pred_class)
```


```{r}
augment(qda_fit, new_data = penguin_test) %>%
  accuracy(truth = species, estimate = .pred_class)
```

```{r}
#con <- DBI::dbConnect(duckdb::duckdb(), dbdir = "my-db.duckdb")
#DBI::dbWriteTable(con, "penguins", palmerpenguins::penguins)
#DBI::dbDisconnect(con)
```

```{r}
#con <- DBI::dbConnect(
#  duckdb::duckdb(), 
 # dbdir = "my-db.duckdb"
#  )
#df <- dplyr::tbl(con, "penguins")
#DBI::dbDisconnect(con)
```
```{r}
DBI::dbDisconnect(con, shutdown = TRUE)
```
